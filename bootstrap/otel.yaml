---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: otel
spec:
  goTemplate: true
  generators:
    - git:
        repoURL: https://github.com/cloudhonk/argocd-demo.git
        revision: main
        files:
          - path: "cluster/otel/dev-us-east-1.yaml"
  syncPolicy:
    preserveResourcesOnDeletion: true
  template:
    metadata:
      name: "otel-{{.name}}"
      annotations:
        argocd.argoproj.io/tracking-id: otel-{{.name}}
      labels:
        app.kubernetes.io/instance: "otel"
        app.kubernetes.io/installation: "{{.purpose}}"
    spec:
      project: "{{.env}}"
      destination:
        name: "{{.name}}"
        namespace: "utils"
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - SkipDryRunOnMissingResource=true
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        path: "otel"
        repoURL: "https://github.com/cloudhonk/argocd-demo"
        targetRevision: "HEAD"
        helm:
          releaseName: otel
          valuesObject:
            clusterName: "{{.name}}"
            opentelemetry-kube-stack:
              collectors:
                daemon:
                  enabled: true
                  labels:
                    otel-collector-type: daemonset
                  targetAllocator:
                    enabled: true
                    image: ghcr.io/open-telemetry/opentelemetry-operator/target-allocator:main
                    allocationStrategy: per-node
                    prometheusCR:
                      enabled: true
                      podMonitorSelector: {}
                      scrapeInterval: "45s"
                      serviceMonitorSelector: {}
                  config:
                    exporters:
                      debug:
                        verbosity: detailed
                        sampling_initial: 5
                        sampling_thereafter: 200
                      otlphttp/newrelic:
                        endpoint: "https://otlp.nr-data.net:443"
                        headers:
                          api-key: "f6e6fc65e5910c3b864627d0b9b77c19FFFFNRAL"
                    service:
                      pipelines:
                        traces:
                          receivers: [otlp]
                          processors: [batch]
                          exporters: [otlphttp/newrelic]
                        metrics:
                          receivers: [otlp, prometheus]
                          processors: [batch]
                          exporters: [otlphttp/newrelic]
                  presets:
                    logsCollection:
                      enabled: false
                    kubeletMetrics:
                      enabled: false
                    hostMetrics:
                      enabled: false
                    kubernetesAttributes:
                      enabled: false
                cluster:
                  enabled: false
              instrumentation:
                enabled: false
              opAMPBridge:
                enabled: false
              kubernetesServiceMonitors:
                enabled: false
              kubeApiServer:
                enabled: false
              kubelet:
                enabled: false
              kubeControllerManager:
                enabled: false
              kubeDns:
                enabled: false
              kubeEtcd:
                enabled: false
              kubeScheduler:
                enabled: false
              kubeProxy:
                enabled: false
              kubeStateMetrics:
                enabled: false
              nodeExporter:
                enabled: false
              opentelemetry-operator:
                manager:
                  collectorImage:
                    repository: "mirror.gcr.io/otel/opentelemetry-collector-contrib"
                  featureGatesMap:
                    operator.targetallocator.mtls: false
                    operator.collector.targetallocatorcr: true
                    operator.observability.prometheus: true
                admissionWebhooks:
                  certManager:
                    enabled: false
